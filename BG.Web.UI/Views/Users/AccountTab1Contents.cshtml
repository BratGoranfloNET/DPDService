@model UserViewModel

<!-- Meta -->

@{
	var dateTimeFormat = Globalization.RegionCulture.DateTimeFormat;
	var activityDatePattern = $"{dateTimeFormat.LongDatePattern} {dateTimeFormat.ShortTimePattern}";
}

<!-- Page Contents -->

<h4 class="mb-md">@UserResources.StatusSettingsLabel</h4>

<section class="simple-compose-box mb-xlg">

	<form method="get" action="/">
		@Html.TextAreaFor(model => model.StatusMessageUpdate, new { @placeholder = UserResources.StatusSettingsHint, @maxlength = BG.Core.Entities.User.StatusMessageMaxLength })
	</form>

	<div class="compose-box-footer">

		<ul class="compose-btn">
			<li>
				<button type="submit" class="btn btn-primary btn-xs">@UserResources.StatusMessageUpdateLabel</button>
			</li>
		</ul>

	</div>

</section>

<h4 class="mb-xlg">@TimelineResources.UserTimelineLabel</h4>

<div class="timeline timeline-simple mt-xlg mb-md">

	@if (Model.Activities.Count > 0)
	{
		<div class="tm-body">

			@foreach (var item in Model.Activities)
			{
				<div class="tm-title">
					<h3 class="h5 text-uppercase">@item.Key</h3>
				</div>

				<ol class="tm-items">

					@foreach (var activity in item.Value)
					{
						<li>
							<div class="tm-box">
								<p class="text-muted mb-none">@Globalization.GetLocalDateTime(activity.Date).DateTime.ToString(activityDatePattern)</p>
								<p>@activity.Type.GetDisplayName()</p>
							</div>
						</li>
					}

				</ol>
			}

		</div>
	}
	else
	{
		<p class="text-center text-muted mt-xlg">@TimelineResources.NotActivityMessage</p>
	}

</div>
